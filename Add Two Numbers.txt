class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode dummyHead = new ListNode(0); // dummy node to simplify the result list creation
        ListNode current = dummyHead;
        int carry = 0;

        // Traverse both lists
        while (l1 != null || l2 != null) {
            int x = (l1 != null) ? l1.val : 0; // get value of l1 or 0 if null
            int y = (l2 != null) ? l2.val : 0; // get value of l2 or 0 if null

            int sum = x + y + carry; // add values and carry
            carry = sum / 10;        // carry for next node
            current.next = new ListNode(sum % 10); // create new node with single digit
            current = current.next;

            // move to next nodes
            if (l1 != null) l1 = l1.next;
            if (l2 != null) l2 = l2.next;
        }

        // If there's a carry left
        if (carry > 0) {
            current.next = new ListNode(carry);
        }

    return dummyHead.next; 
    }
}